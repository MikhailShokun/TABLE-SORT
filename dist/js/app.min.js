/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst table = document.querySelector('.table');\r\n// table.addEventListener('click', tableOnClick);\r\nlet colIndex = -1;\r\n\r\nfunction sortTable(index, type, isSorted) {\r\n    const tbody = table.querySelector('tbody');\r\n\r\n    function compare(rowA, rowB) {\r\n        const rowDataA = rowA.cells[index].innerHTML;\r\n        const rowDataB = rowB.cells[index].innerHTML;\r\n        switch (type) {\r\n            case 'integer':\r\n            case 'double':\r\n                return rowDataA - rowDataB;\r\n                break;\r\n            case 'date':\r\n                const dateA = rowDataA.split('.').reverse().join('-');\r\n                const dateB = rowDataB.split('.').reverse().join('-');\r\n                return new Date(dateA).getTime() - new Date(dateB).getTime();\r\n                break;\r\n            case 'text':\r\n                if (rowDataA < rowDataB) return -1;\r\n                else if (rowDataA > rowDataB) return 1;\r\n                return 0;\r\n                break;\r\n        }\r\n    }\r\n\r\n    let rows = [].slice.call(tbody.rows);\r\n    rows.sort(compare);\r\n    if (isSorted) rows.reverse();\r\n    table.removeChild(tbody);\r\n    for (let i = 0; i < rows.length; i++) {\r\n        tbody.appendChild(rows[i]);\r\n    }\r\n    table.appendChild(tbody);\r\n}\r\n\r\n\r\ntable.addEventListener('click', tableOnClick);\r\n\r\nfunction tableOnClick(e) {\r\n    const el = e.target;\r\n    if (el.nodeName !== 'TH') return;\r\n    const index = el.cellIndex;\r\n    const type = el.getAttribute('data-type');\r\n    sortTable(index, type, colIndex === index);\r\n    colIndex = (colIndex === index) ? -1 : index;\r\n}\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;